name: Deploy to AWS ECS with Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Build, Push, and Deploy with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 

      - name: Install Dependencies
        run: npm ci

      - name: Debug Installed Packages
        run: npm list | grep aws-sdk || echo "AWS SDK not installed!"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "af-south-1"

      - name: Debug AWS Credentials
        run: |
          echo "Checking AWS credentials..."
          aws sts get-caller-identity || echo "AWS credentials not valid!"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: inflation-app
          IMAGE_TAG: latest
        run: |
          echo "Building and pushing Docker image..."
          docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      - name: Terraform Init
        working-directory: infrastructure
        run: |
          echo "Checking S3 access before Terraform init..."
          aws s3 ls s3://sol-inflation-data || echo "S3 bucket access failed!"

          echo "Initializing Terraform..."
          terraform init -backend-config="region=af-south-1" \
                         -backend-config="bucket=sol-inflation-data" \
                         -backend-config="key=terraform.tfstate"

      - name: Terraform Plan (Preview Changes)
        working-directory: infrastructure
        env:
          TF_VAR_api_key: "${{ secrets.TF_VAR_API_KEY }}" 
          TF_VAR_aws_region: "af-south-1" 
          TF_VAR_s3_bucket: "sol-inflation-data"
          TF_VAR_s3_filename: "inflation_rewards.csv"
        run: |
          echo "Running Terraform plan..."
          terraform plan -out=tfplan || echo "Terraform plan failed!"

      - name: Terraform Apply (Deploy Changes)
        working-directory: infrastructure
        env:
          TF_VAR_api_key: "${{ secrets.TF_VAR_API_KEY }}" 
          TF_VAR_aws_region: "af-south-1" 
          TF_VAR_s3_bucket: "sol-inflation-data"
          TF_VAR_s3_filename: "inflation_rewards.csv"

          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_REGION: "af-south-1"
        run: |
          echo "Applying Terraform changes..."
          terraform apply -auto-approve -lock=false tfplan || echo "Terraform apply failed!"
